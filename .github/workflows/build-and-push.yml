name: build-and-push

on:
  push:
    tags:
      - "**.**.**"
      - experiment/**/**/**
    paths:
      - src/**
      - .github/workflows/build-and-push.yml
  workflow_dispatch:

env:
  CACHE_FROM_SRC: /tmp/.buildx-cache
  CACHE_TO_DEST: /tmp/.buildx-cache-new

jobs:
  build-and-push:
    name: build-and-push
    runs-on: ubuntu-latest
    strategy:
      matrix:
        images:
          - dockerfile: src/Dockerfile.python.dev
            containerName: python-devcontainer
            username: python
            environmentName: python
            dockerReadmePath: src/python/DOCKER_README.python.md
            dockerShortDescription: Devcontainer for python workloads
            additionalFilesToWatch: src/python/**
            additionalAptPackages: ""

          - dockerfile: src/Dockerfile.conda.dev
            containerName: conda-econ-devcontainer
            username: econ
            environmentName: econ
            environmentConfigPath: src/econ/environment.econ.yml
            dockerReadmePath: src/econ/DOCKER_README.econ.md
            dockerShortDescription: Devcontainer for economics workloads
            additionalFilesToWatch: src/econ/**
            additionalAptPackages: ""

          - dockerfile: src/Dockerfile.conda.dev
            containerName: conda-math-devcontainer
            username: math
            environmentName: math
            environmentConfigPath: src/math/environment.math.yml
            dockerReadmePath: src/math/DOCKER_README.math.md
            dockerShortDescription: Devcontainer for mathematics workloads
            additionalFilesToWatch: src/math/**
            additionalAptPackages: ""

          - dockerfile: src/Dockerfile.conda.dev
            containerName: conda-music-devcontainer
            username: music
            environmentName: music
            environmentConfigPath: src/music/environment.music.yml
            dockerReadmePath: src/music/DOCKER_README.music.md
            dockerShortDescription: Devcontainer for music workloads
            additionalFilesToWatch: src/music/**
            additionalAptPackages: musescore3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Get changed files
        id: changed_files
        uses: tj-actions/changed-files@v25
        with:
          files: |
            ${{ matrix.images.dockerfile }}
            ${{ matrix.images.additionalFilesToWatch }}
            .github/workflows/build-and-push.yml

      - name: Declare run state
        id: run_state
        run: |
          if [ ${{ github.ref_type }} == tag ] && \
            ( \
              [ ${{ steps.changed_files.outputs.any_modified }} == true ] || \
              [ ${{ github.event_name }} == workflow_dispatch ] \
            );
          then
            echo "run_docker_build=true" >> $GITHUB_OUTPUT
            echo "::debug::Docker build will carry out as expected."
          else
            echo "run_docker_build=false" >> $GITHUB_OUTPUT
            echo "Docker build is cancelled as the required conditions for a run haven't been met"
          fi

      - name: Variables
        if: steps.run_state.outputs.run_docker_build == 'true'
        id: variables
        run: |
          repo_tag=${{ github.ref_name }}
          image_tag=${repo_tag//\//-}
          image_ref=${{ matrix.images.containerName }}:$image_tag
          echo "image_tag=$image_tag" >> $GITHUB_OUTPUT

      - name: Build and push ${{ steps.variables.outputs.image_ref }}
        if: steps.run_state.outputs.run_docker_build == 'true'
        uses: utkusarioglu/devcontainer-build@main
        with:
          docker_hub_username: ${{ secrets.DOCKERHUB_USERNAME }}
          docker_hub_token: ${{ secrets.DOCKERHUB_TOKEN }}
          image_name: ${{ matrix.images.containerName }}
          image_tag: ${{ steps.variables.outputs.image_tag }}
          dockerfile_path: ${{ matrix.images.dockerfile }}
          build_args: |
            ROOT_PASS=${{ secrets.DOCKER_IMAGE_ROOT_PASS }}
            USERNAME=${{ matrix.images.username }}
            ENVIRONMENT_NAME=${{ matrix.images.environmentName }}
            ENVIRONMENT_CONFIG=${{ matrix.images.environmentConfigPath }}
            ADDITIONAL_APT_PACKAGES=${{ matrix.images.additionalAptPackages }}
          devcontainer_subfolder: src/${{ matrix.images.environmentName }}
          devcontainer_run_cmd_path: /scripts/devcontainer-check.sh
          docker_hub_repo_short_description: ${{ matrix.images.dockerShortDescription }}
          docker_hub_repo_readme_file_path: ${{ matrix.images.dockerReadmePath }}

      - name: Telegram notifications
        if: always()
        uses: utkusarioglu/telegram-notifications@main
        with:
          telegram_id: ${{ secrets.TELEGRAM_ID }}
          telegram_token: ${{ secrets.TELEGRAM_TOKEN }}
          job_status: ${{ job.status }}
          github_context: ${{ toJson(github) }}
